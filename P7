Program 7: Extend the library management system from the previous question by implementing an interface for library items. Ensure books and other media can be managed uniformly.

package main
import "fmt"
type LibraryItem interface {
borrow()
returnItem()
checkAvailability()
}
type Book struct {
title string
available bool
}
func (b *Book) borrow() {
if b.available {
b.available = false
fmt.Println(b.title, "has been borrowed.")
} else {
fmt.Println(b.title, "is not available.")
}
}
func (b *Book) returnItem() {
if !b.available {
b.available = true
fmt.Println(b.title, "has been returned.")
} else {
fmt.Println(b.title, "was not borrowed.")
}
}
func (b *Book) checkAvailability() {
if b.available {
fmt.Println(b.title, "is available.")
} else {
fmt.Println(b.title, "is not available.")
}
}
func main() {
var item LibraryItem = &Book{title: "Go Programming", available: true}
item.checkAvailability()
item.borrow()
item.checkAvailability()
item.returnItem()
}
